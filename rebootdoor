#!/bin/bash
set -euo pipefail
cd "$(dirname "$0")"

token=$(cat ~/hasstoken)

# shellcheck disable=SC2120
help () {
    # if arguments, print them
    [ $# == 0 ] || echo "$*"

  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [a|b]
    reboot doors, optionally pass which door to reboot
Available options:
  -h, --help       display this help and exit
EOF

    # if args, exit 1 else exit 0
    [ $# == 0 ] || exit 1
    exit 0
}

msg() {
    echo >&2 -e "${1-}"
}

die() {
    local msg=$1
    local code=${2-1} # default exit status 1
    msg "$msg"
    exit "$code"
}

# getopt short options go together, long options have commas
TEMP=$(getopt -o h --long help -n "$0" -- "$@")
#shellcheck disable=SC2181
if [ $? != 0 ] ; then
    die "something wrong with getopt"
fi
eval set -- "$TEMP"

while true ; do
    case "$1" in
        -h|--help) help; exit 0; shift ;;
        --) shift ; break ;;
        *) die "issue parsing args, unexpected argument '$0'!" ;;
    esac
done

targetDoor=${1:-}
shift || true
if [ -z "$targetDoor" ]; then
    targetDoor="both"
fi
if [ "$targetDoor" != "a" ] && [ "$targetDoor" != "b" ] && [ "$targetDoor" != "both" ]; then
    die "target door valeu of '$targetDoor' is not valid, valid optins are 'a', 'b', or 'both'"
fi

reboot () {
    door=$1
    curl -X POST \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $token" \
        -d "{\"entity_id\":\"script.${door}_side_keypad_power_cycle\"}" \
        http://10.13.0.22/api/services/script/turn_on
    echo
}

if [[ "$targetDoor" = "a" ]] || [[ "$targetDoor" = "both" ]]; then
    reboot a
fi
if [[ "$targetDoor" = "b" ]] || [[ "$targetDoor" = "both" ]]; then
    reboot b
fi
